<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>cassmig-usage</artifactId>
        <groupId>com.github.ecyshor</groupId>
        <version>1.0.0</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>cassmig-external-migrations-usage</artifactId>
    <properties>
        <dockerSkip>false</dockerSkip>
    </properties>
    <packaging>war</packaging>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.6</version>
                <configuration>
                    <webResources>
                        <resource>
                            <filtering>true</filtering>
                            <directory>src/main/webapp</directory>
                            <includes>
                                <include>**/*.jsp</include>
                                <!-- include any other file types you want to filter -->
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
        <finalName>cassmig</finalName>
    </build>
    <dependencies>
        <dependency>
            <groupId>com.github.ecyshor</groupId>
            <artifactId>cassmig-usage-spring</artifactId>
            <version>1.0.0</version>
        </dependency>
        <dependency>
            <groupId>com.github.ecyshor</groupId>
            <artifactId>cassandra-migration</artifactId>
            <version>1.0.2-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>4.1.7.RELEASE</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <profiles>
        <profile>
            <id>int-test</id>
            <activation>
                <property>
                    <name>int-test</name>
                    <value>true</value>
                </property>
            </activation>
            <properties>
                <dockerSkip>false</dockerSkip>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <configuration>
                            <skip>${dockerSkip}</skip>
                            <executable>docker-compose</executable>
                        </configuration>
                        <executions>
                            <execution>
                                <id>build-supporting-services</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${dockerSkip}</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>build</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>setup-supporting-services</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${dockerSkip}</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>up</argument>
                                        <argument>-d</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>sleep-so-jetty-has-time-to-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${dockerSkip}</skip>
                                    <executable>sleep</executable>
                                    <arguments>
                                        <argument>30</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>stop-supporting-services-containers</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${dockerSkip}</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>stop</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                            <execution>
                                <id>remove-supporting-services-containers</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                                <configuration>
                                    <skip>${dockerSkip}</skip>
                                    <executable>docker-compose</executable>
                                    <arguments>
                                        <argument>rm</argument>
                                        <argument>--force</argument>
                                    </arguments>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <includes>
                                <include>**/*IntTest</include>
                            </includes>
                        </configuration>
                        <executions>
                            <execution>
                                <id>integration-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>integration-test</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>verify-integration-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>verify</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
